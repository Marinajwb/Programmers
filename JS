1번문제부터 마지막 문제까지의 정답이 순서대로 저장된 배열 anwers가 주어졌을 때 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 반환하도록 
solution()함수 작성 

function solution(answers) {

 
const patterns = [[1,2,3,4,5], [2,1,2,3,2,4,2,5], [3,3,1,1,2,2,4,4,5,5]];
// 인덱스 0 번 : 1번 수포자
// 인덱스 1번 : 2번 수포자
// 인덱스 2번 : 3번 수포자

const scores = [0,0,0];
// 수포자들의 점수를 저장할 배열 생성 

for(const [i, answer] of answers.entries()){
  for( const [j,pattern] of patterns.entries()){
      if( answer === patterns[ i%pattern.length]){
          scores[j]+=1;  
// 정답배열의 패턴길이를 수포자의 패턴길이로 나눈 나머지번째
// 정답의 패턴길이가 수포자의 길이보다 길수도 있으므로 
// 나눈값의 나머지는 나누는 값보다 클 수 없다. 

      }

  }

}
const maxScore = Math.max(...scores);
 // scores를 펼쳐 가장 큰 값을 maxScore에 담는다
const highestScore = []; 
for(let i =0; i<scores.length;i++){
if(scores[i] === maxScore){
highestScore.push(i+1)
//배열의 인덱스는 0부터 시작하기때문에 1을 더해준다
}

}

return highestScore;


}




### 이번 문제로 entries() 함수를 처음 써볼 수 있었다. 
